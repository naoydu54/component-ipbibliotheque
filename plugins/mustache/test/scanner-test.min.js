require("./helper");var Scanner=Mustache.Scanner;describe("A new Mustache.Scanner",function(){describe("for an empty string",function(){it("is at the end",function(){var a=new Scanner("");assert(a.eos())})});describe("for a non-empty string",function(){var a;beforeEach(function(){a=new Scanner("a b c")});describe("scan",function(){describe("when the RegExp matches the entire string",function(){it("returns the entire string",function(){var b=a.scan(/a b c/);assert.equal(b,a.string);assert(a.eos())})});describe("when the RegExp matches at index 0",function(){it("returns the portion of the string that matched",function(){var b=a.scan(/a/);assert.equal(b,"a");assert.equal(a.pos,1)})});describe("when the RegExp matches at some index other than 0",function(){it("returns the empty string",function(){var b=a.scan(/b/);assert.equal(b,"");assert.equal(a.pos,0)})});describe("when the RegExp does not match",function(){it("returns the empty string",function(){var b=a.scan(/z/);assert.equal(b,"");assert.equal(a.pos,0)})})});describe("scanUntil",function(){describe("when the RegExp matches at index 0",function(){it("returns the empty string",function(){var b=a.scanUntil(/a/);assert.equal(b,"");assert.equal(a.pos,0)})});describe("when the RegExp matches at some index other than 0",function(){it("returns the string up to that index",function(){var b=a.scanUntil(/b/);assert.equal(b,"a ");assert.equal(a.pos,2)})});describe("when the RegExp does not match",function(){it("returns the entire string",function(){var b=a.scanUntil(/z/);assert.equal(b,a.string);assert(a.eos())})})})})});